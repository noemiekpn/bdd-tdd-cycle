require 'spec_helper'

describe MoviesController, :type => :controller do
  #before :each do
  #  @movie = Movie.new('Finding Nemo', 'G', '2003-05-03', 'Andrew Stanton')
  #end
  
  describe 'create a new movie' do
    before { get :newrake roui }
    it 'should have a title field' do
      response.should have_field(title, :type => 'text')
    end
    it 'should have a rating selection' do
      response.should have_select(rating)
    end
    it 'should have a release date selection' do
      response.should have_field("title")
    end
    it 'should have a description field' do
      response.should have_field("title")
    end
    it 'should have a director field' do
      response.should have_field("title")
    end
    it 'should display a message of success' do
      response.should be_success
    end
    it 'should redirect to movies page' do
      response.should redirect_to movies_path
    end
    it 'should show new movie in the table' do
      response.body.should have_content("Hello world")
    end
  end

  describe 'update an existing movie' do
  before { get :edit }
    it 'should have a title field' do
      response.should have_field("title")
    end
    it 'should have a rating selection' do
      response.should have_selector("title")
    end
    it 'should have a release date selection' do
      response.should have_field("title")
    end
    it 'should have a description field' do
      response.should have_field("title")
    end
    it 'should have a director field' do
      response.should have_field("title")
    end
    it 'should display a message of success' do
      response.should be_success
    end
    it 'should redirect to details page' do
      response.should redirect_to movies_path
    end
  end
  
  describe 'delete an existing movie' do
    it 'should display a message of confirmation' do
      response.should be_success
    end
    it 'should display a message of success' do
      response.should be_success
    end
    it 'should redirect to movies page' do
      response.should redirect_to movies_path
    end
    it 'should not show movie in the table' do
      response.body.should have_content("Hello world")
    end
  end
  
  # Testing the similar movies method
  describe 'find movie with same director' do	
  	it 'should have a link to find similar movies' do
  	  response.should have_link("Find Movies With Same Director")
  	end
  	context 'when movie has known director' do
	  it 'should redirect to similar movies page' do
	    response.should redirect_to movies_path
	  end
	  it 'should show list of movies with same director' do
	    response.should redirect_to movies_path
	  end
    end
    context 'when movie has unknown director' do
      it 'should redirect to movies page' do
        response.should redirect_to movies_path
      end
    end  	
  end
end
